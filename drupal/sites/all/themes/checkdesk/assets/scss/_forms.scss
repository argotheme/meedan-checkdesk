// For testing
// $from-direction: right;
//
// This is deprecated, just use span($width, $width)
@mixin full($width) {
  @include span-columns($width, $width);
}

// Item lists
// Reset password
@mixin checkdesk-form-item-list($width, $context) {
  @include span-columns($width, $context);
  a {  color: $dark-grey;  }
  li {
    @include reset-box-model;
    @include reset-list-style;
  }
}


// Form items in a form
//
// $width- form width
// $context - size of containing element
//
// Compatibility: untested
@mixin checkdesk-form-item($width: $form-width, $context: $cw, $gw: $gw) {

  .form-item-name ~ .item-list {
    // Forgot password and create new account <.item-list>s
    @include checkdesk-form-item-list($width, $context);
  }

  textarea {
    height: 100px;
  }

  // All form items
  .form-item {
    @include reset-box-model;
    @include span-columns($width, $width);
    clear: both;
    display: block;
    
    .form-item { // Nested <.form-item>s
      @include reset-box-model;
      @include span-columns($width, $width);
    }

    input {
      @include reset-box-model;
      @include span-columns($width, $width, $gw);
      clear: opposite-position($from-direction);
      padding: { top: $gw/2; bottom: $gw/2; }
      margin: { top: $gw/2; bottom: $gw/2; }
      @include border-radius(3px);

      // Border transition on inputs
      border: 1px solid $grey;
      @include bb-transition($grey, $black, '0.2s', 'border-color', ':hover');

      &:hover {
        @include single-box-shadow(rgba($dark-blue, 0.8), 2px, 2px, 2px, 2px, inset);
        border: 1px solid $darker-grey;
      }

      @include bb-transition($grey, $black, '0.2s', 'border-color', ':focus') {
        &:focus { border: 1px solid $darker-grey; }
      }
    }

    label {
      @include reset-box-model;
      font-size: $large-font-size;
      display: block;
      font-weight: normal;
      padding-top: 1em;
      padding-bottom: 1em;
    }

    .description {
      @include reset-box-model;
      clear: $from-direction;
      font-size: $form-helper-text-size;
      // hidden by default, displayed at larger breakpoints
      // display: block;
      display: none;
    }
  }
}


// Basics for all checkdesk forms
//
// $width - form width
// $context - size of containing element
//
// Compatibility: untested
@mixin checkdesk-form($width: $form-width, $context: $cw, $radios-width: $width - 2) {
    
  // The forms 
  //
  form {
    border-top: 1px solid $identity;
    background-color: rgba(white, 0.5);
    margin-top: $gw;
    padding-top: $gw;

    // Use content blocks to set the width
    @content;

    // Form Radios
    // http://checkdesk:8888/node/add/media
    .form-type-radios {
      .form-item {
        background: rgba($light-grey, 0.5);
        margin-bottom: 2px;
        @include span-columns($radios-width, $width);

        input.form-radio {
          @include reset-box-model;
          @include span-columns(1, $radios-width);
        }

        label.option {
          @include span-columns($radios-width - 1 omega, $radios-width);
          font-size: $base-font-size;
          @include reset-box-model;
        }
      }
    }

    // Form Actions
    // Main submit button
    .form-actions {
      @include reset-box-model;
      @include clearfix;
      @include full($width);
      margin-top: $base-font-size;
      padding: $gw/2 0;

      // Form actions: all buttons
      input, a {
        @include reset-box-model;
        @include checkdesk-button;
        margin-#{opposite-position($from-direction)}: $base-font-size;
        margin-#{$from-direction}: $base-font-size;
      }

      // Form actions: Submit buttons
      input[type="submit"] {
        @include checkdesk-button($twitter-blue);
      }
    }

    // Confirmation Form Actions: Confirm delete node
    &.confirmation {
      .form-actions input {
          @include checkdesk-button($firetruck-red); // Red delete button
      }
    }

    // Form "remember me" section
    .form-item-remember-me {
      font-size: $small-font-size;
      color: $dark-grey;
    }

    // Form checkboxes
    .form-type-checkbox {
      @include reset-box-model;
      @include full($width);

      // The checkbox
      input.form-checkbox {
        @include inline-block;
        padding: $gw;
        width: $gw;
      } 

      // Checkbox label
      label.option {
        line-height: 1.3;
        @include reset-box-model;
        @include inline-block;
        clear: none;
        float: left;
      }
    }

    // Form textareas, basic inputs
    textarea, input {
      background-color: $inputBackground;
      border: 1px solid $inputBorder;
      @include ctb-box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
      @include ctb-transition(#{border linear .2s, box-shadow linear .2s});

      // Focus state
      &:focus {
        border-color: rgba($donjuan, .8);
        outline: 0;
        outline: thin dotted \9; /* IE6-9 */
        @include ctb-box-shadow(#{inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba($donjuan, .6)});
      }
    }
  }
}