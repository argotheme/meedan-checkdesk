
// Form Actions
//
@mixin form-actions {
  // Form Actions
  // Main submit button
  .form-actions {
    @include clearfix;
    @include span-columns($cw, $cw, $gw/2); // end of grid

    // Form actions: buttons and anchors
    input, a {
      @include checkdesk-button;
      margin-#{opposite-position($from-direction)}: $base-font-size!important;
      margin-#{$from-direction}: $base-font-size;
    }
  }

  // All Submit buttons, seven if they arent in form-actions ...
  input[type="submit"] {
    @include checkdesk-button($twitter-blue);
    margin: ms(-2);
  }

  input#edit-reset, 
  input#edit-draft {
    @include checkdesk-button(lighten($dark-grey, 15%));
    margin: ms(-2);
  }
}


// In addition to our use of normalize, and other resets, 
// This standardizes form elements
//
@mixin form-reset {
  
  label, input, button, select, textarea {
    font-size: $base-font-size;
  }

  input, button, select, textarea {
    font-family: $sans-font-family;
  }

  label {
    display: block;
    margin-bottom: ms(-2);
  }

  select, textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
    display: inline-block;
    height: $baseLineHeight;
    margin-bottom: ms(-2);
    font-size: $base-font-size;
    line-height: $base-line-height;
    color: $gray;
    @include border-radius(4px);
    vertical-align: middle;
  }

  input, textarea, .uneditable-input { 
    width: ms(8); // legacy default width overridden in post-1996 selectors below
  }

  textarea { 
    height: auto; 
  }

  // Everything else
  textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
    background-color: $input-background;
    border: 1px solid $inputBorder;
    @include box-shadow(rgba($black, .075) 0 1px 1px inset);
    @include ctb-transition(#{border linear .2s, box-shadow linear .2s});

    // Focus state
    &:focus {
      border-color: rgba($facebook-blue,.8);
      outline: 0;
      outline: thin dotted \9; /* IE6-9 */
      // @include ctb-box-shadow(#{inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6)});
    }
  }

  // Position radios and checkboxes better
  input[type="radio"], input[type="checkbox"] {
    margin: ms(-2) 0 0;
    *margin-top: 0; /* IE7 */
    margin-top: 1px \9; /* IE8-9 */
    line-height: normal;
    cursor: pointer;
  }

  // Reset width of input images, buttons, radios, checkboxes
  input[type="file"], input[type="image"], input[type="submit"], input[type="reset"], input[type="button"], input[type="radio"], input[type="checkbox"] {
    width: auto; // Override of generic input selector
  }

  // Make select elements obey height by applying a border
  select {
    width: 220px; // default input width + 10px of padding that doesn't get applied
    border: 1px solid $inputBorder;
    background-color: $input-background; // Chrome on Linux and Mobile Safari need background-color
  }

  // Make multiple select elements height not fixed
  select[multiple], select[size] {height: auto; }

  // Focus for select, file, radio, and checkbox
  select:focus, input[type="file"]:focus, input[type="radio"]:focus, input[type="checkbox"]:focus {
    @include ctb-tab-focus();
  }
}

// ============================================================================
// The forms 
//
form {
  @include form-reset;
  @include form-actions;
  @include span-columns($cw, $cw);

  & > .form-item {
    @include span-columns($cw, $cw);
    font-size: $small-font-size;
    color: $dark-grey;
    background: rgba($light-grey, 0.5);
    margin-bottom: 2px;
    display: block;
    padding-bottom: $gw;
    float: $from-direction;
    padding-top: ms(0);

    // Nested <.form-item>s
    .form-item { 
      @include span-columns($cw, $cw);  
    }
  } 

  // Default inputs and textareas
  input,
  textarea {
    @include span-columns($cw, $cw);
    @include border-radius(3px);
    padding: ms(-3);
    margin-bottom: ms(-3);
    background-color: $input-background;
  }

  // Default labels
  label {
    font-size: $large-font-size;
    display: block;
    font-weight: normal;
    padding-top: ms(1);
    padding-bottom: ms(-5);
  }

  // Default descriptions
  .description {
    clear: $from-direction;
    font-size: $form-helper-text-size;
    display: none; // displayed at larger breakpoints
  }

  // Form textareas, basic inputs
  textarea, 
  input {
    background-color: $input-background;
    border: 1px solid $grey;

    // Focus state
    &:focus {
      border-color: rgba($donjuan, .8);
      outline: 0;
      outline: thin dotted \9; /* IE6-9 */
      @include ctb-box-shadow(#{inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba($donjuan, .6)});
    }
  }

  // Radios and Checkboxes
  input[type="radio"], 
  input[type="checkbox"] {
    width: ms(3);
    height: ms(3);
    margin: 0;
    display: block;
    float: $from-direction;
  }

  input[type="radio"] + label,
  input[type="checkbox"] + label, {
    display: inline-block;
    padding: 0;
    line-height: ms(3);
    background-color: pink;
  }

  // Confirmation Form Actions: Confirm delete node
  &.confirmation {
    .form-actions input {
        @include checkdesk-button($firetruck-red); // Red delete button
    }
  }

  // Form checkboxes
  .form-type-checkbox {
    @include reset-box-model;
    @include span-columns($cw, $cw);

    // The checkbox
    input.form-checkbox {
      @include inline-block;
      padding: $gw;
      width: $gw;
    } 

    // Checkbox label
    label.option {
      line-height: 1.3;
      @include reset-box-model;
      @include inline-block;
      clear: none;
      float: $from-direction;
    }
  }

  @include at-breakpoint($break-small) {}
  @include at-breakpoint($break-medium) {}
  @include at-breakpoint($break-large) {}
}