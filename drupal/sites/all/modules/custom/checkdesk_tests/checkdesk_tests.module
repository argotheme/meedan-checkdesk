<?php
/**
 * @file
 * Main checkdesk_tests file
 */

/**
 * Implements hook_init().
 */
function checkdesk_tests_init() {
  // Alerts break tests, so let's replace them by console.log
  // Clearly this is not the best approach... but the others didn't work! :(
  // I tried: Behat hooks (beforeStep, afterStep), set cookie on Behat, send HTTP headers on Behat, etc.
  drupal_add_js('window.alert = function(message) { if (console) console.log(message); }', 'inline');
}

/**
 * Implements hook_menu().
 */
function checkdesk_tests_menu() {
  $items = array();

  $items['admin/config/development/checkdesk_tests'] = array(
    'title' => 'Checkdesk Tests',
    'description' => 'Run automated tests for Checkdesk',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_checkdesk_tests_settings'),
    'access arguments' => array('administer site configuration'),
  );

  $items['checkdesk-tests/status'] = array(
    'page callback' => '_checkdesk_tests_status',
    'access callback' => TRUE,
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Form function for `_checkdesk_tests_settings`.
 */
function _checkdesk_tests_settings($form, $form_state) {
  drupal_add_css(drupal_get_path('module', 'checkdesk_tests') . '/css/checkdesk_tests.css');

  $pidfile = variable_get('checkdesk_tests_pidfile', '');
  $pid = empty($pidfile) ? '' : file_get_contents($pidfile);
  $outfile = variable_get('checkdesk_tests_outfile', '');
  $output = empty($outfile) ? '' : file_get_contents($outfile);

  $form['checkdesk_tests_http_user'] = array(
    '#title' => t('HTTP Authentication User'),
    '#type' => 'textfield',
    '#default_value' => variable_get('checkdesk_tests_http_user', ''),
  );

  $form['checkdesk_tests_http_password'] = array(
    '#title' => t('HTTP Authentication Password'),
    '#type' => 'password',
    '#default_value' => variable_get('checkdesk_tests_http_password', ''),
  );

  $form['checkdesk_tests_http_auth_headless_only'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable HTTP authentication only for headless testing'),
    '#default_value' => variable_get('checkdesk_tests_http_auth_headless_only', 0),
    '#description' => t('Sometimes testing using Selenium (or other driver that allows JavaScript) does not handle HTTP authentication well, for example when you have some link with some JavaScript behavior attached. On these cases, you may enable this HTTP authentication only for headless testing and find another solution for drivers that allow JavaScript (for example, with Selenium + JavaScript you can use the extension Auto Auth and save the credentials on a Firefox profile).'),
  );

  $label = t('Running');
  $class = 'running';
  if (!$pid) {
    $label = t('Not running');
    $class = '';
  }
  $form['checkdesk_tests_status'] = array(
    '#type' => 'markup',
    '#markup' => '<p id="checkdesk-tests-status" class="'. $class .'">' . t('Status:') . ' <span>' . $label . '</span></p>',
  );

  $form['checkdesk_tests_output'] = array(
    '#title' => t('Tests output'),
    '#type' => 'markup',
    '#markup' => '<div id="checkdesk-tests-output">' . $output . '</div>',
  );

  $form['checkdesk_tests_steps'] = array(
    '#title' => t('Available steps'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['checkdesk_tests_steps']['checkdesk_tests_steps_content'] = array(
    '#type' => 'markup',
    '#markup' => _checkdesk_tests_steps(),
  );
    
  $form['#after_build'] = array('_checkdesk_tests_load_javascript');
  
  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Run tests'),
  );
  $form['#submit'] = array('_checkdesk_tests_submit');

  $form['#theme'] = 'system_settings_form';
  return $form;
}

/**
 * Get available steps.
 */
function _checkdesk_tests_steps() {
  global $base_root;
  $cmd = "cd ..; MINK_EXTENSION_PARAMS='base_url=$base_root' php bin/behat -dl";
  $output = shell_exec($cmd);
  return nl2br(htmlentities($output));
}

/**
 * Load JavaScript file for form.
 */
function _checkdesk_tests_load_javascript($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'checkdesk_tests') . '/js/checkdesk_tests.js');
  return $form;
}

/**
 * Submit function.
 */
function _checkdesk_tests_submit($form, &$form_state) {
  global $base_root;

  // HTTP authentication

  variable_set('checkdesk_tests_http_user', $form_state['values']['checkdesk_tests_http_user']);
  if (!empty($form_state['values']['checkdesk_tests_http_password'])) {
    variable_set('checkdesk_tests_http_password', $form_state['values']['checkdesk_tests_http_password']);
  }
  $username = variable_get('checkdesk_tests_http_user', '');
  $password = variable_get('checkdesk_tests_http_password', '');

  $url = $base_root;
  if (!empty($username) && !empty($password) && !variable_get('checkdesk_tests_http_auth_headless_only', 0)) {
    $url = preg_replace('/^(https?:\/\/)/', "$1$username:$password@", $url);
    $url = preg_replace('/([^\/])$/', "$1/", $url);
  }

  // Run tests

  $pidfile = variable_get('checkdesk_tests_pidfile', '');
  $pid = empty($pidfile) ? 0 : intval(trim(file_get_contents($pidfile)));
  $outfile = variable_get('checkdesk_tests_outfile', '');

  if (!$pid && empty($file)) {
    $tmp = file_directory_temp();
    $cmd = "MINK_EXTENSION_PARAMS='base_url=$url' php bin/behat -f html";
    $outfile = $tmp . '/checkdesk-tests-' . time() . '.log';
    $pidfile = $tmp . '/checkdesk-tests-' . time() . '.pid';
    exec(sprintf("cd ..; %s > %s 2>&1 & echo $! > %s", $cmd, $outfile, $pidfile));
    variable_set('checkdesk_tests_pidfile', $pidfile);
    variable_set('checkdesk_tests_outfile', $outfile);
  }
  else {
    drupal_set_message(t('Tests are already running.'));
  }
}

/**
 * Function to get tests status.
 */
function _checkdesk_tests_status() {
  $pidfile = variable_get('checkdesk_tests_pidfile', '');
  $pid = empty($pidfile) ? 0 : intval(trim(file_get_contents($pidfile)));
  $outfile = variable_get('checkdesk_tests_outfile', '');
  $output = file_get_contents($outfile);

  $running = false;

  if ($pid) {
    try {
      $result = shell_exec(sprintf("ps %d", $pid));
      if (count(preg_split("/\n/", $result)) > 2) {
        $running = true;
      }
    } catch (Exception $e) {
      // Do nothing
    }

    if (!$running) {
      unlink($pidfile);
      unlink($outfile);
      variable_set('checkdesk_tests_pidfile', '');
      variable_set('checkdesk_tests_outfile', '');
    }
  }

  drupal_json_output(array('running' => $running, 'output' => $output));
}
