<?php

/**
 * Implements hook_form_FORM_ID_alter() for `post_node_form`.
 */
function checkdesk_core_form_post_node_form_alter(&$form, &$form_state) {
  // Are we showing the post form on the desk page?
  if (($node = menu_get_object()) && $node->type == 'discussion') {
    // Hard-code desk reference to current desk.
    $form['field_desk'][LANGUAGE_NONE]['#default_value'] = $node->nid;
    $form['field_desk']['#access'] = false;

    // Make the body field a drop target for reports.
    $form['body']['#prefix'] = '<div class="droppable">';
    $form['body']['#suffix'] = '</div>';
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for `comment_node_discussion_form`.
 */
function checkdesk_core_form_comment_node_discussion_form_alter(&$form, &$form_state) {
  // Hide comment attachment field on comment form.
  $form['field_attachment']['#access'] = false;
}

/**
 * API function to return report node title given its embedded media title.
 */
function checkdesk_core_oembed_title($node) {
  $embed = meedan_oembed_data($node->field_link[LANGUAGE_NONE][0]['url']);
  if ($embed) {
    return $embed->title;    
  }
  // TODO: Revert to auto_nodetitle instead of doing this manually.
  return t('report-!user-!datetime', array('!user' => $node->name, '!datetime' => date('U', $node->created)));
}

/**
 * Implements hook_views_pre_render().
 */
function checkdesk_core_views_pre_render(&$view) {
  if ($view->name == 'desk_reports') {
    // Setup drag & drop.
    drupal_add_library('system', 'ui.draggable');
    drupal_add_library('system', 'ui.droppable');
    drupal_add_js(drupal_get_path('module', 'checkdesk_core') . '/checkdesk_core.js');
    drupal_add_js(libraries_get_path('insertatcaret') . '/jquery.insertatcaret.js');

    // Send view results to client.
    drupal_add_js(array('checkdesk' => array('reports' => $view->result)), 'setting');
  }
}

